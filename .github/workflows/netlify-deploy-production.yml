name: netlify CI/CD

on:
  workflow_dispatch:
  release:
    types: [published]
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create production env file
        id: create-production-env
        working-directory: ./apps/blog
        run: |
          ls -al
          touch .env.production
          echo "NEXT_PUBLIC_GA_ID=${{ secrets.PRODUCTION_GA_ID }}" >> .env.production
          echo "NEXT_PUBLIC_SENTRY_DSN=${{ secrets.PRODUCTION_SENTRY_DSN }}" >> .env.production
          echo "NEXT_PUBLIC_APP_DOMAIN=${{ secrets.NEXT_PUBLIC_APP_DOMAIN }}" >> .env.production
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_API_SPACE_ID=${{ secrets.NEXT_PUBLIC_API_SPACE_ID }}" >> .env.production
          echo "NEXT_PUBLIC_API_TOKEN=${{ secrets.NEXT_PUBLIC_API_TOKEN }}" >> .env.production
          echo "NEXT_PUBLIC_API_TOKEN_FOR_PREVIEW=${{ secrets.NEXT_PUBLIC_API_TOKEN_FOR_PREVIEW }}" >> .env.production

      - name: Create .sentryclirc file
        id: create-sentryclirc
        run: |
          ls -al
          touch .sentryclirc
          {
            echo "[auth]"
            echo "token=${{ secrets.PRODUCTION_SENTRY_TOKEN }}"
          } >> .sentryclirc

      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            apps/blog/node_modules
            packages/ui/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: echo '${{ toJSON(steps.cache-node-modules.outputs) }}'

      - name: Install
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Deploy
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=./apps/blog/.next --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.PRODUCTION_NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.PRODUCTION_NETLIFY_AUTH_TOKEN }}
